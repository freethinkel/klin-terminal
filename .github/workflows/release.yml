name: Release
on:
  push:
    branches:
      - release
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64
      - run: flutter config --enable-macos-desktop
      - run: flutter build macos --release

      - name: Use Nodejs for create dmg
        uses: actions/setup-node@v3
        with:
          node-version: 20.9
      - run: python3 -m pip install setuptools
      - run: npm install -g appdmg
      - run: rm -rf *.dmg && mv ./build/macos/Build/Products/Release/klin.app ./build/macos/Klin.app
      - run: appdmg ./create_dmg.json ./Klin.dmg

      - name: Create Version Number
        id: versions
        run: |
          git fetch
          VERSION_WITHOUT_SUFFIX="$(grep 'version:' pubspec.yaml | awk '{ print $2 }' | cut -d'+' -f 1)"
          function parse_git_hash() {
            git rev-list --count origin/release
          }
          MAIN_COUNT=$(parse_git_hash)
          APP_VERSION="$VERSION_WITHOUT_SUFFIX+$MAIN_COUNT"
          echo "::set-output name=version::$(echo $APP_VERSION)"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.versions.outputs.version }}
          release_name: Release ${{ steps.versions.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Klin.dmg
          asset_name: Klin.dmg
          asset_content_type: application/octet-stream
